- The application must be an HTML, CSS, and JavaScript frontend with a Rails API backend. 
All interactions between the client and the server must be handled asynchronously (AJAX) 
and use JSON as the communication format.
DONE

- The JavaScript application must use Object Oriented JavaScript (classes) 
to encapsulate related data and behavior.
DONE - Recipe class added

- The domain model served by the Rails backend must include a resource with 
at least one has-many relationship. For example, if you were building an Instagram clone, 
you might display a list of photos with associated comments.
    Cookbook:
        has_many :cookbook_recipes
        has_many :recipes, through: :cookbook_recipes
    Recipe:
        has_many :cookbook_recipes
        has_many :cookbooks, through: :cookbook_recipes
- The backend and frontend must collaborate to demonstrate Client-Server Communication. 
Your application should have at least 3 AJAX calls, 
covering at least 2 of Create, Read, Update, and Delete (CRUD). 
Your client-side JavaScript code must use fetch with the appropriate HTTP verb, 
and your Rails API should use RESTful conventions.

